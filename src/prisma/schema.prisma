datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

model SearchKey {
    id     Int    @id @default(autoincrement())
    search String
}

model User {
    id            Int        @id @default(autoincrement())
    firstname     String?
    lastname      String?
    email         String     @unique
    username      String
    password      String
    telegram_id   String     @unique
    picture       String?
    refresh_token String?    @unique
    role          String?    @default("USER")
    verify        Boolean    @default(false)
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt
    deleted       Boolean    @default(false)
    deleted_time  DateTime?
    tracking      Tracking[]
}

model Tracking {
    id                Int       @id @default(autoincrement())
    name              String?
    url               String
    hostname          String?
    status            Boolean   @default(true)
    last_price        Float?    @default(0)
    last_view_date    DateTime?
    target_price      Float?
    error             String?
    problem_count     Int?      @default(0)
    no_stock          Boolean?  @default(false)
    message_count     Int?      @default(0)
    last_message_date DateTime? @default(now())
    updatedAt         DateTime  @updatedAt
    createdAt         DateTime  @default(now())
    deleted           Boolean   @default(false)
    deleted_time      DateTime?
    user              User      @relation(fields: [user_id], references: [id])
    user_id           Int
}

model App {
    id              Int       @id @default(autoincrement())
    active_tracking Int?
    start_date      DateTime?
    end_date        DateTime?
    time_difference String?
    browser_count   Int?      @default(1)
    page_count      Int?      @default(5)
    cron_time       String?   @default("5")
}

model Category {
    id              Int        @id @default(autoincrement())
    name            String
    picture         String?
    createdAt       DateTime   @default(now())
    updatedAt       DateTime   @updatedAt
    deleted         Boolean    @default(false)
    deleted_time    DateTime?
    parent_id       Int?
    parent_category Category?  @relation("ParentRelation", fields: [parent_id], references: [id])
    child_category  Category[] @relation("ParentRelation")
    products        Product[]
}

model Product {
    id           Int       @id @default(autoincrement())
    name         String
    picture      String?
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
    deleted      Boolean   @default(false)
    deleted_time DateTime?
    category_id  Int
    category     Category  @relation(fields: [category_id], references: [id])
}
